{"version":3,"sources":["logo.svg","components/navbar.js","components/Api.js","components/vr.png","components/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","AppBar","position","Toolbar","IconButton","color","Typography","API_KEY","Mycard","match","useState","detail","setDetail","open","setOpen","handleClick","id","url","fetch","then","response","json","catch","error","console","log","getMatchDetails","data","handleOpen","handleClose","Card","style","marginTop","CardContent","Grid","container","justify","alignItems","spacing","item","variant","src","VS","width","alt","CardActions","Button","onClick","unique_id","marginLeft","Date","dateTimeGMT","toLocaleString","Dialog","onClose","DialogTitle","DialogContentText","stat","fontStyle","fontWeight","matchStarted","score","DialogActions","autoFocus","App","matches","setMatches","useEffect","getMatches","alert","className","sm","map","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1df62735.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst Navbar = ()=>{\r\n    return (\r\n        <AppBar  position=\"static\">\r\n            <Toolbar>\r\n                <IconButton color=\"inherit\">\r\n                    <MenuIcon/>\r\n                </IconButton>\r\n                <Typography>\r\n                    Live Score\r\n                </Typography>\r\n            </Toolbar>\r\n\r\n        </AppBar>\r\n    )\r\n}\r\nexport default Navbar;","const API_KEY=\"3iXJEnDOq9YzEzRJJRP2UXqIi3R2\";\r\n\r\nexport const getMatches = () => {\r\n    const url = `https://cricapi.com/api/matches?apikey=${API_KEY}`;\r\n    return fetch(url)\r\n    .then((response) => response.json())\r\n    .catch((error) => console.log(\"ERROR :\",error));\r\n\r\n};\r\n\r\n// Load match details\r\nexport const getMatchDetails= (id) =>{\r\nconst url = `https://cricapi.com/api/cricketScore?apikey=${API_KEY}&unique_id=${id}`;\r\nreturn fetch(url).then(response=>response.json()).catch(error=>console.log(error));\r\n};","export default __webpack_public_path__ + \"static/media/vr.9531f70b.png\";","import { Button, Card, CardActions, CardContent, Dialog, DialogActions, DialogContentText, DialogTitle, Grid, Typography } from \"@material-ui/core\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { getMatchDetails } from \"./Api\";\r\nimport VS from \"./vr.png\";\r\n\r\nconst Mycard = ({match})=>{\r\n    const [detail,setDetail]=useState({});\r\n    const [open,setOpen]=useState(false);\r\n    const handleClick =(id)=>{\r\n        getMatchDetails(id)\r\n        .then((data)=>{console.log(\"Match Data\",data)\r\n        setDetail(data);\r\n        handleOpen();\r\n})\r\n        .catch((error)=>console.log(error));\r\n    };\r\n    const GetMatchCard =() =>{\r\n    return(\r\n        <Card style={{marginTop:20}}>\r\n            <CardContent>\r\n                <Grid container justify=\"center\" alignItems=\"center\"   spacing={4}>\r\n                    <Grid item>\r\n                        <Typography variant=\"h6\">{match[\"team-1\"]}</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <img src ={VS} width=\"130\" alt=\"logo\"/>\r\n                     </Grid>\r\n                    <Grid item>\r\n                        <Typography variant=\"h6\">{match[\"team-2\"]}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Grid container  justify=\"center\">\r\n                <Button  onClick={()=>{\r\n                    handleClick(match.unique_id);\r\n                }} \r\n                variant=\"contained\" color=\"primary\">\r\n                    Show Details\r\n                </Button>\r\n                <Button variant=\"outlined\" style={{marginLeft:15}}color=\"primary\">\r\n                    Start Time {new Date(match.dateTimeGMT).toLocaleString()}\r\n                </Button>\r\n                </Grid>\r\n            </CardActions>\r\n        </Card>\r\n        )\r\n    }\r\n    const handleClose=()=>{\r\n        setOpen(false);\r\n    }\r\n    const handleOpen=()=>{\r\n        setOpen(true);\r\n    }\r\n    const getDialog=()=>(\r\n        <Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle id=\"alert-dialoge-title\">{\"Match Details...\"}\r\n            <DialogContentText id=\"alert-dialoge-description\">\r\n                <Typography>\r\n                    {detail.stat}\r\n                </Typography>\r\n                <Typography>\r\n                    Match <span style={{fontStyle:\"italic\",fontWeight:\"bold\"}}>{detail.matchStarted?\"started\":\"still not started\"}{\"\"}</span>\r\n                </Typography>\r\n                <Typography>\r\n                    Score <span style={{fontStyle:\"italic\",fontWeight:\"bold\"}}>\r\n                        {detail.score}</span>\r\n                </Typography>\r\n            </DialogContentText>\r\n            </DialogTitle>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                    Close\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n    return <Fragment>\r\n        {GetMatchCard()}\r\n        {getDialog()}\r\n    </Fragment>\r\n};\r\nexport default Mycard;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport Navbar from './components/navbar';\nimport { getMatches } from \"./components/Api\";\nimport { Fragment, useEffect, useState } from 'react';\nimport MyCard from './components/Card';\n\nfunction App() {\n  const [matches, setMatches]= useState([]);\n  useEffect (()=> { getMatches()\n    .then((data) =>{\n       setMatches(data.matches);\n     console.log(data.matches);})\n    .catch((error) => alert(\"Could not Load DATA\"))\n  },[]);\n  return (\n    <div className=\"App\">\n      <Navbar/>\n     <Typography variant=\"h3\" style={{marginTop:20}}> Welcome to Live Score App</Typography>\n     <Grid container>\n        <Grid sm=\"2\"></Grid>\n          <Grid sm=\"8\">\n      {\n      matches.map((match) =>(\n        <Fragment>\n          {\n            (match.type==\"Twenty20\"? <MyCard key={match.unique_id} match={match}/>:\"\")\n          }\n        </Fragment>\n        )\n  )}    \n        </Grid>\n      </Grid>\n</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}